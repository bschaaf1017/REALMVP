{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/brian/Desktop/HRR50/REALMVP/components/Chart.jsx\";\nimport React, { useState, useEffect } from 'react'; // import axios from 'axios';\n// import ChartItem from './ChartItem';\n\nimport AnyChart from 'anychart-react';\n\nconst Chart = props => {\n  console.log(props.data);\n  let rent = props.data.rent / props.data.income * 100;\n  let util = props.data.utils / props.data.income * 100;\n  let car = props.data.car / props.data.income * 100;\n  let other = props.data.other / props.data.income * 100;\n  let unspent = (props.data.income - props.data.rent - props.data.utils - props.data.car - props.data.other) / props.data.income * 100;\n  console.log('PERCENT', unspent);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"hey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Chart; // export default function Chart() {\n//   const [budgets, setBudget] = useState([]);\n//   useEffect(() => {\n//     axios.get('/api/budget')\n//       .then(res => {\n//         setBudget(res.data);\n//       })\n//       .catch((err) => console.log(err));\n//   });\n//   return (\n//     <ul>{budgets.map(budget => \n//       <ChartItem budget={budget} />\n//     )}</ul>\n//   );\n// }\n// export default class Chart extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n//   componentDidMount() {\n//     axios.get('/api/budget')\n//       .then(resp => {\n//         console.log(resp.data[0]);\n//         this.setState(resp.data[0]);\n//       });\n//   }\n//   render() {\n//     let rent = (this.state.rent / this.state.income) * 100;\n//     let util = (this.state.utils / this.state.income) * 100;\n//     let car = (this.state.car / this.state.income) * 100;\n//     let other = (this.state.other / this.state.income) * 100;\n//     let unspent = ((this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other) / this.state.income) * 100;\n//     console.log('PERCENT', unspent);\n//     return (\n//       <div>\n//         <h2>{this.state.name}'s Budget</h2>\n//         <h3>Total Monthly Income: ${this.state.income}</h3>\n//         <AnyChart \n//           width={800}\n//           height={600}\n//           type=\"pie\"\n//           data={[\n//             {x: `Rent/ Morgage: $${this.state.rent}`, value: rent},\n//             {x: `Utilities: $${this.state.utils}`, value: util},\n//             {x: `Car Payment: $${this.state.car}`, value: car},\n//             {x: `Other: $${this.state.other}`, value: other},\n//             {x: `Unspent: $${this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other}`, value: unspent}\n//           ]}\n//         />\n//       </div>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/brian/Desktop/HRR50/REALMVP/components/Chart.jsx"],"names":["React","useState","useEffect","AnyChart","Chart","props","console","log","data","rent","income","util","utils","car","other","unspent"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AAEA;;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;AACA,MAAIC,IAAI,GAAIJ,KAAK,CAACG,IAAN,CAAWC,IAAX,GAAkBJ,KAAK,CAACG,IAAN,CAAWE,MAA9B,GAAwC,GAAnD;AACA,MAAIC,IAAI,GAAIN,KAAK,CAACG,IAAN,CAAWI,KAAX,GAAmBP,KAAK,CAACG,IAAN,CAAWE,MAA/B,GAAyC,GAApD;AACA,MAAIG,GAAG,GAAIR,KAAK,CAACG,IAAN,CAAWK,GAAX,GAAiBR,KAAK,CAACG,IAAN,CAAWE,MAA7B,GAAuC,GAAjD;AACA,MAAII,KAAK,GAAIT,KAAK,CAACG,IAAN,CAAWM,KAAX,GAAmBT,KAAK,CAACG,IAAN,CAAWE,MAA/B,GAAyC,GAArD;AACA,MAAIK,OAAO,GAAI,CAACV,KAAK,CAACG,IAAN,CAAWE,MAAX,GAAoBL,KAAK,CAACG,IAAN,CAAWC,IAA/B,GAAsCJ,KAAK,CAACG,IAAN,CAAWI,KAAjD,GAAyDP,KAAK,CAACG,IAAN,CAAWK,GAApE,GAA0ER,KAAK,CAACG,IAAN,CAAWM,KAAtF,IAA+FT,KAAK,CAACG,IAAN,CAAWE,MAA3G,GAAqH,GAAnI;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBQ,OAAvB;AACA,sBACE;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA3BD;;AA4BA,eAAeX,KAAf,C,CAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// import ChartItem from './ChartItem';\nimport AnyChart from 'anychart-react';\nconst Chart = (props) => {\n  console.log(props.data);\n  let rent = (props.data.rent / props.data.income) * 100;\n  let util = (props.data.utils / props.data.income) * 100;\n  let car = (props.data.car / props.data.income) * 100;\n  let other = (props.data.other / props.data.income) * 100;\n  let unspent = ((props.data.income - props.data.rent - props.data.utils - props.data.car - props.data.other) / props.data.income) * 100;\n  console.log('PERCENT', unspent);\n  return (\n    <li>\n      <div>hey</div>\n      {/* <h1>{props.data.name}'s Budget</h1>\n      <h3>Total Monthly Income: ${props.data.income}</h3>\n      <AnyChart \n        width={800}\n        height={700}\n        type=\"pie\"\n        data={[\n          {x: `Rent/ Morgage: $${props.data.rent}`, value: props.data.rent},\n          {x: `Utilities: $${props.data.util}`, value: props.data.util},\n          {x: `Car Payment: $${props.data.car}`, value: props.data.car},\n          {x: `Other: $${props.data.other}`, value: props.data.other},\n          // {x: `Unspent: $${this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other}`, value: unspent}\n        ]}\n      /> */}\n    </li>\n  );\n};\nexport default Chart;\n      \n\n// export default function Chart() {\n//   const [budgets, setBudget] = useState([]);\n\n//   useEffect(() => {\n//     axios.get('/api/budget')\n//       .then(res => {\n//         setBudget(res.data);\n//       })\n//       .catch((err) => console.log(err));\n//   });\n//   return (\n//     <ul>{budgets.map(budget => \n//       <ChartItem budget={budget} />\n//     )}</ul>\n//   );\n// }\n\n// export default class Chart extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n//   componentDidMount() {\n//     axios.get('/api/budget')\n//       .then(resp => {\n//         console.log(resp.data[0]);\n//         this.setState(resp.data[0]);\n//       });\n//   }\n//   render() {\n//     let rent = (this.state.rent / this.state.income) * 100;\n//     let util = (this.state.utils / this.state.income) * 100;\n//     let car = (this.state.car / this.state.income) * 100;\n//     let other = (this.state.other / this.state.income) * 100;\n//     let unspent = ((this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other) / this.state.income) * 100;\n//     console.log('PERCENT', unspent);\n//     return (\n//       <div>\n\n//         <h2>{this.state.name}'s Budget</h2>\n//         <h3>Total Monthly Income: ${this.state.income}</h3>\n//         <AnyChart \n//           width={800}\n//           height={600}\n//           type=\"pie\"\n//           data={[\n//             {x: `Rent/ Morgage: $${this.state.rent}`, value: rent},\n//             {x: `Utilities: $${this.state.utils}`, value: util},\n//             {x: `Car Payment: $${this.state.car}`, value: car},\n//             {x: `Other: $${this.state.other}`, value: other},\n//             {x: `Unspent: $${this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other}`, value: unspent}\n//           ]}\n//         />\n//       </div>\n//     );\n//   }\n// }"]},"metadata":{},"sourceType":"module"}