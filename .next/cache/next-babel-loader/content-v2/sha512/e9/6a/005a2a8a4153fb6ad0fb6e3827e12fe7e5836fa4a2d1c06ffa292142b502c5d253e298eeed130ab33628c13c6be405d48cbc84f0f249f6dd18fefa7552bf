{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brian/Desktop/HRR50/REALMVP/components/Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AnyChart from 'anychart-react';\nexport default function Chart() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      budgets = _useState[0],\n      setBudget = _useState[1];\n\n  useEffect(function () {\n    axios.get('/api/budget').then(function (res) {\n      setBudget(res.data);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  });\n  var diffBudgets = budgets.map(function (budget) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [budget.name, \"'s Budget\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Monthly Income: $\", budget.income]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(AnyChart, {\n        width: 500,\n        height: 500,\n        data: [{\n          x: \"Rent/ Morgage: $\".concat(_this.state.rent),\n          value: rent\n        }, {\n          x: \"Utilities: $\".concat(_this.state.utils),\n          value: util\n        }, {\n          x: \"Car Payment: $\".concat(_this.state.car),\n          value: car\n        }, {\n          x: \"Other: $\".concat(_this.state.other),\n          value: other\n        }, {\n          x: \"Unspent: $\".concat(_this.state.income - _this.state.rent - _this.state.utils - _this.state.car - _this.state.other),\n          value: unspent\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: diffBudgets\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n} // export default class Chart extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n//   componentDidMount() {\n//     axios.get('/api/budget')\n//       .then(resp => {\n//         console.log(resp.data[0]);\n//         this.setState(resp.data[0]);\n//       });\n//   }\n//   render() {\n//     let rent = (this.state.rent / this.state.income) * 100;\n//     let util = (this.state.utils / this.state.income) * 100;\n//     let car = (this.state.car / this.state.income) * 100;\n//     let other = (this.state.other / this.state.income) * 100;\n//     let unspent = ((this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other) / this.state.income) * 100;\n//     console.log('PERCENT', unspent);\n//     return (\n//       <div>\n//         <h2>{this.state.name}'s Budget</h2>\n//         <h3>Total Monthly Income: ${this.state.income}</h3>\n//         <AnyChart \n//           width={800}\n//           height={600}\n//           type=\"pie\"\n//           data={[\n//             {x: `Rent/ Morgage: $${this.state.rent}`, value: rent},\n//             {x: `Utilities: $${this.state.utils}`, value: util},\n//             {x: `Car Payment: $${this.state.car}`, value: car},\n//             {x: `Other: $${this.state.other}`, value: other},\n//             {x: `Unspent: $${this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other}`, value: unspent}\n//           ]}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n_s(Chart, \"bryV4Tlfu77vjKLj1zTlUCBLPAI=\");\n\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/brian/Desktop/HRR50/REALMVP/components/Chart.jsx"],"names":["React","useState","useEffect","axios","AnyChart","Chart","budgets","setBudget","get","then","res","data","err","console","log","diffBudgets","map","budget","name","income","x","state","rent","value","utils","util","car","other","unspent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA;;AAAA,kBACDJ,QAAQ,CAAC,EAAD,CADP;AAAA,MACvBK,OADuB;AAAA,MACdC,SADc;;AAG9BL,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,KAAK,CAACK,GAAN,CAAU,aAAV,EACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACXH,MAAAA,SAAS,CAACG,GAAG,CAACC,IAAL,CAAT;AACD,KAHH,WAIS,UAACC,GAAD;AAAA,aAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,KAJT;AAKD,GANQ,CAAT;AAOA,MAAMG,WAAW,GAAGT,OAAO,CAACU,GAAR,CAAY,UAACC,MAAD;AAAA,wBAC9B;AAAA,8BACE;AAAA,mBAAKA,MAAM,CAACC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAA,8CAA4BD,MAAM,CAACE,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE,QAAC,QAAD;AACE,QAAA,KAAK,EAAE,GADT;AAEE,QAAA,MAAM,EAAE,GAFV;AAGE,QAAA,IAAI,EAAE,CACQ;AAACC,UAAAA,CAAC,4BAAqB,KAAI,CAACC,KAAL,CAAWC,IAAhC,CAAF;AAA0CC,UAAAA,KAAK,EAAED;AAAjD,SADR,EAEQ;AAACF,UAAAA,CAAC,wBAAiB,KAAI,CAACC,KAAL,CAAWG,KAA5B,CAAF;AAAuCD,UAAAA,KAAK,EAAEE;AAA9C,SAFR,EAGQ;AAACL,UAAAA,CAAC,0BAAmB,KAAI,CAACC,KAAL,CAAWK,GAA9B,CAAF;AAAuCH,UAAAA,KAAK,EAAEG;AAA9C,SAHR,EAIQ;AAACN,UAAAA,CAAC,oBAAa,KAAI,CAACC,KAAL,CAAWM,KAAxB,CAAF;AAAmCJ,UAAAA,KAAK,EAAEI;AAA1C,SAJR,EAKQ;AAACP,UAAAA,CAAC,sBAAe,KAAI,CAACC,KAAL,CAAWF,MAAX,GAAoB,KAAI,CAACE,KAAL,CAAWC,IAA/B,GAAsC,KAAI,CAACD,KAAL,CAAWG,KAAjD,GAAyD,KAAI,CAACH,KAAL,CAAWK,GAApE,GAA0E,KAAI,CAACL,KAAL,CAAWM,KAApG,CAAF;AAA+GJ,UAAAA,KAAK,EAAEK;AAAtH,SALR;AAHR;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA,aAD8B;AAAA,GAAZ,CAApB;AAiBA,sBACE;AAAA,cAAKb;AAAL;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAvEwBV,K;;KAAAA,K","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AnyChart from 'anychart-react';\n\nexport default function Chart() {\n  const [budgets, setBudget] = useState([]);\n\n  useEffect(() => {\n    axios.get('/api/budget')\n      .then(res => {\n        setBudget(res.data);\n      })\n      .catch((err) => console.log(err));\n  });\n  const diffBudgets = budgets.map((budget) => \n    <li>\n      <h1>{budget.name}'s Budget</h1>\n      <h3>Total Monthly Income: ${budget.income}</h3>\n      <AnyChart \n        width={500}\n        height={500}\n        data={[\n                      {x: `Rent/ Morgage: $${this.state.rent}`, value: rent},\n                      {x: `Utilities: $${this.state.utils}`, value: util},\n                      {x: `Car Payment: $${this.state.car}`, value: car},\n                      {x: `Other: $${this.state.other}`, value: other},\n                      {x: `Unspent: $${this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other}`, value: unspent}\n                    ]}\n      />\n    </li>\n  );\n  return (\n    <ul>{diffBudgets}</ul>\n  );\n}\n\n// export default class Chart extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n//   componentDidMount() {\n//     axios.get('/api/budget')\n//       .then(resp => {\n//         console.log(resp.data[0]);\n//         this.setState(resp.data[0]);\n//       });\n//   }\n//   render() {\n//     let rent = (this.state.rent / this.state.income) * 100;\n//     let util = (this.state.utils / this.state.income) * 100;\n//     let car = (this.state.car / this.state.income) * 100;\n//     let other = (this.state.other / this.state.income) * 100;\n//     let unspent = ((this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other) / this.state.income) * 100;\n//     console.log('PERCENT', unspent);\n//     return (\n//       <div>\n\n//         <h2>{this.state.name}'s Budget</h2>\n//         <h3>Total Monthly Income: ${this.state.income}</h3>\n//         <AnyChart \n//           width={800}\n//           height={600}\n//           type=\"pie\"\n//           data={[\n//             {x: `Rent/ Morgage: $${this.state.rent}`, value: rent},\n//             {x: `Utilities: $${this.state.utils}`, value: util},\n//             {x: `Car Payment: $${this.state.car}`, value: car},\n//             {x: `Other: $${this.state.other}`, value: other},\n//             {x: `Unspent: $${this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other}`, value: unspent}\n//           ]}\n//         />\n//       </div>\n//     );\n//   }\n// }"]},"metadata":{},"sourceType":"module"}