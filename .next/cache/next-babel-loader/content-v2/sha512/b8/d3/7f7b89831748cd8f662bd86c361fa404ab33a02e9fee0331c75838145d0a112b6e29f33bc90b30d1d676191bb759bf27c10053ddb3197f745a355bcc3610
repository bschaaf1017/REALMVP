{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/brian/Desktop/HRR50/REALMVP/components/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport AnyChart from 'anychart-react';\n\nconst Chart = props => {\n  let rent = props.data.rent / props.data.income * 100;\n  let util = props.data.utils / props.data.income * 100;\n  let car = props.data.car / props.data.income * 100;\n  let other = props.data.other / props.data.income * 100;\n  let unspent = (props.data.income - props.data.rent - props.data.utils - props.data.car - props.data.other) / props.data.income * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [props.data.name, \"'s Budget\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total Monthly Income: $\", props.data.income]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnyChart, {\n      width: 800,\n      height: 700,\n      type: \"pie\",\n      data: [{\n        x: `Rent/ Morgage: $${props.data.rent}`,\n        value: rent\n      }, {\n        x: `Utilities: $${props.data.util}`,\n        value: util\n      }, {\n        x: `Car Payment: $${props.data.car}`,\n        value: car\n      }, {\n        x: `Other: $${props.data.other}`,\n        value: other\n      }, {\n        x: `Unspent: $${props.data.income - props.data.rent - props.data.utils - props.data.car - props.data.other}`,\n        value: unspent\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/brian/Desktop/HRR50/REALMVP/components/Chart.jsx"],"names":["React","useState","useEffect","AnyChart","Chart","props","rent","data","income","util","utils","car","other","unspent","name","x","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAEvB,MAAIC,IAAI,GAAID,KAAK,CAACE,IAAN,CAAWD,IAAX,GAAkBD,KAAK,CAACE,IAAN,CAAWC,MAA9B,GAAwC,GAAnD;AACA,MAAIC,IAAI,GAAIJ,KAAK,CAACE,IAAN,CAAWG,KAAX,GAAmBL,KAAK,CAACE,IAAN,CAAWC,MAA/B,GAAyC,GAApD;AACA,MAAIG,GAAG,GAAIN,KAAK,CAACE,IAAN,CAAWI,GAAX,GAAiBN,KAAK,CAACE,IAAN,CAAWC,MAA7B,GAAuC,GAAjD;AACA,MAAII,KAAK,GAAIP,KAAK,CAACE,IAAN,CAAWK,KAAX,GAAmBP,KAAK,CAACE,IAAN,CAAWC,MAA/B,GAAyC,GAArD;AACA,MAAIK,OAAO,GAAI,CAACR,KAAK,CAACE,IAAN,CAAWC,MAAX,GAAoBH,KAAK,CAACE,IAAN,CAAWD,IAA/B,GAAsCD,KAAK,CAACE,IAAN,CAAWG,KAAjD,GAAyDL,KAAK,CAACE,IAAN,CAAWI,GAApE,GAA0EN,KAAK,CAACE,IAAN,CAAWK,KAAtF,IAA+FP,KAAK,CAACE,IAAN,CAAWC,MAA3G,GAAqH,GAAnI;AAEA,sBACE;AAAA,4BACE;AAAA,iBAAKH,KAAK,CAACE,IAAN,CAAWO,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,4CAA4BT,KAAK,CAACE,IAAN,CAAWC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,QAAD;AACE,MAAA,KAAK,EAAE,GADT;AAEE,MAAA,MAAM,EAAE,GAFV;AAGE,MAAA,IAAI,EAAC,KAHP;AAIE,MAAA,IAAI,EAAE,CACJ;AAACO,QAAAA,CAAC,EAAG,mBAAkBV,KAAK,CAACE,IAAN,CAAWD,IAAK,EAAvC;AAA0CU,QAAAA,KAAK,EAAEV;AAAjD,OADI,EAEJ;AAACS,QAAAA,CAAC,EAAG,eAAcV,KAAK,CAACE,IAAN,CAAWE,IAAK,EAAnC;AAAsCO,QAAAA,KAAK,EAAEP;AAA7C,OAFI,EAGJ;AAACM,QAAAA,CAAC,EAAG,iBAAgBV,KAAK,CAACE,IAAN,CAAWI,GAAI,EAApC;AAAuCK,QAAAA,KAAK,EAAEL;AAA9C,OAHI,EAIJ;AAACI,QAAAA,CAAC,EAAG,WAAUV,KAAK,CAACE,IAAN,CAAWK,KAAM,EAAhC;AAAmCI,QAAAA,KAAK,EAAEJ;AAA1C,OAJI,EAKJ;AAACG,QAAAA,CAAC,EAAG,aAAYV,KAAK,CAACE,IAAN,CAAWC,MAAX,GAAoBH,KAAK,CAACE,IAAN,CAAWD,IAA/B,GAAsCD,KAAK,CAACE,IAAN,CAAWG,KAAjD,GAAyDL,KAAK,CAACE,IAAN,CAAWI,GAApE,GAA0EN,KAAK,CAACE,IAAN,CAAWK,KAAM,EAA5G;AAA+GI,QAAAA,KAAK,EAAEH;AAAtH,OALI;AAJR;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA1BD;;AA2BA,eAAeT,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AnyChart from 'anychart-react';\n\nconst Chart = (props) => {\n\n  let rent = (props.data.rent / props.data.income) * 100;\n  let util = (props.data.utils / props.data.income) * 100;\n  let car = (props.data.car / props.data.income) * 100;\n  let other = (props.data.other / props.data.income) * 100;\n  let unspent = ((props.data.income - props.data.rent - props.data.utils - props.data.car - props.data.other) / props.data.income) * 100;\n  \n  return (\n    <div>\n      <h1>{props.data.name}'s Budget</h1>\n      <h3>Total Monthly Income: ${props.data.income}</h3>\n      <AnyChart \n        width={800}\n        height={700}\n        type=\"pie\"\n        data={[\n          {x: `Rent/ Morgage: $${props.data.rent}`, value: rent},\n          {x: `Utilities: $${props.data.util}`, value: util},\n          {x: `Car Payment: $${props.data.car}`, value: car},\n          {x: `Other: $${props.data.other}`, value: other},\n          {x: `Unspent: $${props.data.income - props.data.rent - props.data.utils - props.data.car - props.data.other}`, value: unspent}\n        ]}\n      />\n    </div>\n  );\n};\nexport default Chart;\n      \n\n"]},"metadata":{},"sourceType":"module"}