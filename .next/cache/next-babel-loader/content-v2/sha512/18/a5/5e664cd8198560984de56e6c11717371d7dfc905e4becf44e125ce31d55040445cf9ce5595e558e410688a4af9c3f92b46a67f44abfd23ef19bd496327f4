{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brian/Desktop/HRR50/REALMVP/components/Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AnyChart from 'anychart-react';\n\nfunction budgetItem(props) {\n  /*#__PURE__*/\n  _jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [budget.name, \"'s Budget\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total Monthly Income: $\", budget.income]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnyChart, {\n      width: 800,\n      height: 700,\n      type: \"pie\",\n      data: [{\n        x: \"Rent/ Morgage: $\".concat(budget.rent),\n        value: budget.rent\n      }, {\n        x: \"Utilities: $\".concat(budget.util),\n        value: budget.util\n      }, {\n        x: \"Car Payment: $\".concat(budget.car),\n        value: budget.car\n      }, {\n        x: \"Other: $\".concat(budget.other),\n        value: budget.other\n      } // {x: `Unspent: $${this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other}`, value: unspent}\n      ]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this);\n}\n\nexport default function Chart() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      budgets = _useState[0],\n      setBudget = _useState[1];\n\n  useEffect(function () {\n    axios.get('/api/budget').then(function (res) {\n      setBudget(res.data);\n    })[\"catch\"](function (err) {\n      return console.log(err);\n    });\n  });\n  var diffBudgets = budgets.map(function (budget) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [budget.name, \"'s Budget\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Monthly Income: $\", budget.income]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(AnyChart, {\n        width: 800,\n        height: 700,\n        type: \"pie\",\n        data: [{\n          x: \"Rent/ Morgage: $\".concat(budget.rent),\n          value: budget.rent\n        }, {\n          x: \"Utilities: $\".concat(budget.util),\n          value: budget.util\n        }, {\n          x: \"Car Payment: $\".concat(budget.car),\n          value: budget.car\n        }, {\n          x: \"Other: $\".concat(budget.other),\n          value: budget.other\n        } // {x: `Unspent: $${this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other}`, value: unspent}\n        ]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: diffBudgets\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n} // export default class Chart extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n//   componentDidMount() {\n//     axios.get('/api/budget')\n//       .then(resp => {\n//         console.log(resp.data[0]);\n//         this.setState(resp.data[0]);\n//       });\n//   }\n//   render() {\n//     let rent = (this.state.rent / this.state.income) * 100;\n//     let util = (this.state.utils / this.state.income) * 100;\n//     let car = (this.state.car / this.state.income) * 100;\n//     let other = (this.state.other / this.state.income) * 100;\n//     let unspent = ((this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other) / this.state.income) * 100;\n//     console.log('PERCENT', unspent);\n//     return (\n//       <div>\n//         <h2>{this.state.name}'s Budget</h2>\n//         <h3>Total Monthly Income: ${this.state.income}</h3>\n//         <AnyChart \n//           width={800}\n//           height={600}\n//           type=\"pie\"\n//           data={[\n//             {x: `Rent/ Morgage: $${this.state.rent}`, value: rent},\n//             {x: `Utilities: $${this.state.utils}`, value: util},\n//             {x: `Car Payment: $${this.state.car}`, value: car},\n//             {x: `Other: $${this.state.other}`, value: other},\n//             {x: `Unspent: $${this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other}`, value: unspent}\n//           ]}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n_s(Chart, \"bryV4Tlfu77vjKLj1zTlUCBLPAI=\");\n\n_c = Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/brian/Desktop/HRR50/REALMVP/components/Chart.jsx"],"names":["React","useState","useEffect","axios","AnyChart","budgetItem","props","budget","name","income","x","rent","value","util","car","other","Chart","budgets","setBudget","get","then","res","data","err","console","log","diffBudgets","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AnyChart from 'anychart-react';\n\nfunction budgetItem(props) {\n  <li>\n      <h1>{budget.name}'s Budget</h1>\n      <h3>Total Monthly Income: ${budget.income}</h3>\n      <AnyChart \n        width={800}\n        height={700}\n        type=\"pie\"\n        data={[\n          {x: `Rent/ Morgage: $${budget.rent}`, value: budget.rent},\n          {x: `Utilities: $${budget.util}`, value: budget.util},\n          {x: `Car Payment: $${budget.car}`, value: budget.car},\n          {x: `Other: $${budget.other}`, value: budget.other},\n          // {x: `Unspent: $${this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other}`, value: unspent}\n        ]}\n      />\n    </li>\n}\n\nexport default function Chart() {\n  const [budgets, setBudget] = useState([]);\n\n  useEffect(() => {\n    axios.get('/api/budget')\n      .then(res => {\n        setBudget(res.data);\n      })\n      .catch((err) => console.log(err));\n  });\n  const diffBudgets = budgets.map((budget) => \n    <li>\n      <h1>{budget.name}'s Budget</h1>\n      <h3>Total Monthly Income: ${budget.income}</h3>\n      <AnyChart \n        width={800}\n        height={700}\n        type=\"pie\"\n        data={[\n          {x: `Rent/ Morgage: $${budget.rent}`, value: budget.rent},\n          {x: `Utilities: $${budget.util}`, value: budget.util},\n          {x: `Car Payment: $${budget.car}`, value: budget.car},\n          {x: `Other: $${budget.other}`, value: budget.other},\n          // {x: `Unspent: $${this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other}`, value: unspent}\n        ]}\n      />\n    </li>\n  );\n  return (\n    <ul>{diffBudgets}</ul>\n  );\n}\n\n// export default class Chart extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n//   componentDidMount() {\n//     axios.get('/api/budget')\n//       .then(resp => {\n//         console.log(resp.data[0]);\n//         this.setState(resp.data[0]);\n//       });\n//   }\n//   render() {\n//     let rent = (this.state.rent / this.state.income) * 100;\n//     let util = (this.state.utils / this.state.income) * 100;\n//     let car = (this.state.car / this.state.income) * 100;\n//     let other = (this.state.other / this.state.income) * 100;\n//     let unspent = ((this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other) / this.state.income) * 100;\n//     console.log('PERCENT', unspent);\n//     return (\n//       <div>\n\n//         <h2>{this.state.name}'s Budget</h2>\n//         <h3>Total Monthly Income: ${this.state.income}</h3>\n//         <AnyChart \n//           width={800}\n//           height={600}\n//           type=\"pie\"\n//           data={[\n//             {x: `Rent/ Morgage: $${this.state.rent}`, value: rent},\n//             {x: `Utilities: $${this.state.utils}`, value: util},\n//             {x: `Car Payment: $${this.state.car}`, value: car},\n//             {x: `Other: $${this.state.other}`, value: other},\n//             {x: `Unspent: $${this.state.income - this.state.rent - this.state.utils - this.state.car - this.state.other}`, value: unspent}\n//           ]}\n//         />\n//       </div>\n//     );\n//   }\n// }"]},"metadata":{},"sourceType":"module"}